from aiogram import types, Dispatcher
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher import FSMContext
from create_bot import bot, dp
from random import randrange
from keyboards import client_kb
from data_base import sq_db
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton








class FSMclient(StatesGroup):
    photo = State()
    name = State()
    description = State()
    price = State()









@dp.message_handler()
async def kb_answer(message: types.Message):
    if message.text == '/start':
        await bot.send_sticker(message.from_user.id,
                               sticker="CAACAgQAAxkBAAEH-U9kAc5fGqD3fMh3-BKfr3GIx688HwACSRgAAqbxcR7zOpD5Pmgbri4E")

        await bot.send_message(chat_id=message.chat.id,
                               text="–ü—Ä–∏–≤–µ—Ç –ø—Ä–∏–≤–µ—Ç!üëã \n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –ù–∏–∫–∏—Ç–∞ ü§ñ, —è –±–æ—Ç –∑–∞–Ω–∏–º–∞—é—â–∏–π—Å—è –∞—Ä–µ–Ω–¥–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏ –Ω–µ —Ç–æ–ª—å–∫–æ üöò –ù–∞—à –æ—Ñ–∏—Å –æ—Ç–∫—Ä—ã—Ç –¥–ª—è —Ç–µ–±—è —Å 08:00 –¥–æ 22:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ. Welcome! üôå \n\n–ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —É –Ω–∞—Å –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ üåä ",
                               reply_markup=client_kb)

        await bot.send_message(chat_id=message.chat.id,
                               text="C–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ç—ã —Å –Ω–∞–º–∏! üöÄ \n\n–°–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ —è —Å–º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏, —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ç–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –≤—ã–±–æ—Ä—É –∞–≤—Ç–æ, —Ä–∞—Å—Å–∫–∞–∂—É –æ –Ω–æ–≤–∏–Ω–∫–∞—Ö –≤ –º–∏—Ä–µ –∞—Ä–µ–Ω–¥—ã –∞–≤—Ç–æ ü§© ",
                               reply_markup=client_kb)

        await bot.send_message(chat_id=message.chat.id,
                               text="ü§ñ –Ø –µ—â–µ –æ–±—É—á–∞—é—Å—å –Ω–æ–≤—ã–º –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º, –Ω–æ –∫–æ–µ-—á—Ç–æ —è —É–∂–µ —É–º–µ—é üòé \n\n–í—ã–±–µ—Ä–∏ –º–µ–Ω—é –∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—Éüëáüèº",
                               reply_markup=client_kb)


    elif message.text == 'üöò–ê–≤—Ç–æ –≤ –Ω–∞–ª–∏—á–∏–∏':
        await sq_db.command_sql_read_for_client(message)
    elif message.text == 'üöÄ–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–µ –∞–≤—Ç–æ':
        await FSMclient.photo.set()
        await message.answer("–ó–∞–≥—Ä—É–∑–∏ —Ñ–æ—Ç–æ —Å–≤–æ–µ–π –º–∞—à–∏–Ω—ã! üöò")

    elif message.text == '‚òéÔ∏è–ö–æ–Ω—Ç–∞–∫—Ç—ã':
        await message.answer('üìç  –ù–∞—à –∞–¥—Ä–µ—Å: –≥–æ—Ä–æ–¥ –ê–ª–º–∞—Ç—ã, –ñ–ö Gagarin Terrace, –ø—Ä–æ—Å–ø–µ–∫—Ç –ì–∞–≥–∞—Ä–∏–Ω–∞, 244 –ø–æ–º–µ—â–µ–Ω–∏–µ 2 \n\n‚òéÔ∏è –ù–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: +7‚Äí777-777-7777')
    elif message.text == 'üí°–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã':
        await message.answer('–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å 8:00 –¥–æ 22:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ. –ñ–¥–µ–º —Ç–µ–±—è –Ω–∞ –ø–æ–¥—Ä–æ–±–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º ü´∂üèª')
    elif message.text == 'üìç–ù–∞—à–∞ –ª–æ–∫–∞—Ü–∏—è':
        await message.answer('üìç  –ù–∞—à –∞–¥—Ä–µ—Å: –≥–æ—Ä–æ–¥ –ê–ª–º–∞—Ç—ã, –ñ–ö Gagarin Terrace, –ø—Ä–æ—Å–ø–µ–∫—Ç –ì–∞–≥–∞—Ä–∏–Ω–∞, 244 –ø–æ–º–µ—â–µ–Ω–∏–µ 2')
    elif message.text == 'üåü–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤':
        await message.reply("–ü—Ä–∏–≤–µ—Ç, —É–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç! \n\nü§ñ –°–æ–≤—Å–µ–º –Ω–µ–¥–∞–≤–Ω–æ —è –≤–∏–¥–µ–ª —Ç–µ–±—è —É –Ω–∞—Å. –ö–∞–∫ —Ç—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—à—å —Ä–∞–±–æ—Ç—É –Ω–∞—à–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞?üëá ", reply_markup=keyboard_inline)
    elif message.text == 'üì®–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å':
        await message.answer('ü§ñ –ü—Ä–µ–¥–ª–æ–∂–∏ –∏–¥–µ—é, —è –ø–µ—Ä–µ–¥–∞–º –µ–µ –ª—é–¥—è–º, –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—è —Å–æ–∑–¥–∞–ª–∏ ‚ú® \n\n–ó–∞–ø–∏—Å—ã–≤–∞—é ‚å®Ô∏è')
    elif message.text == 'üíØ–ê–∫—Ü–∏–∏':
        await message.answer('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —ç—Ç–∞ –ø–ª—é—à–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:)')




async def load_photo(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['photo'] = message.photo[0].file_id
        await FSMclient.next()
        await message.reply("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –º–∞—Ä–∫—É —Å–≤–æ–µ–π –º–∞—à–∏–Ω—ã! üöó")

async def load_name(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['name'] = message.text
        await FSMclient.next()
        await message.reply("–û–≥–æ, —Ç–æ —á—Ç–æ –Ω–∞–¥–æüòé, –∞ —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–∞—à–∏–Ω—ã!")

async def load_description(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['description'] = message.text
        await FSMclient.next()
        await message.reply("–ê —Ç–µ–ø–µ—Ä—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É, –∑–∞ –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–∞–≤–∞—Ç—å —Å–≤–æ—é –º–∞—à–∏–Ω—É –≤ —Å—É—Ç–∫–∏üíµ")

async def load_price(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['price'] = float(message.text)
        await sq_db.command_sql_add(state)
        await message.answer("–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ üåü")
        await state.finish()

@dp.callback_query_handler(lambda x: x.data and x.data.startswith('del'))
async def del_callback_run(callback_query: types.CallbackQuery):
    await sq_db.command_sql_delete(callback_query.data.replace("del ", ""))
    await callback_query.answer(text=f"{callback_query.data.replace('del ', '')} —É–¥–∞–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.", show_alert=True)

# @dp.message_handler(commands=['delete'])
async def command_delete(message: types.Message):
    read = await sq_db.command_sql_read_for_admin_delete()
    for ret in read:
        await bot.send_photo(message.chat.id, ret[0], f"{ret[1]}\n–û–ø–∏—Å–∞–Ω–∏–µ: {ret[2]}\n –¶–µ–Ω–∞: {ret[-1]}")
        await bot.send_message(message.chat.id, text="–£–¥–∞–ª–∏—Ç—å –≤—ã—à–µ—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç ‚¨ÜÔ∏è", reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton(f"–£–¥–∞–ª–∏—Ç—å {ret[1]}",callback_data=f"del {ret[1]}")))


button1 = InlineKeyboardButton(text="üëé", callback_data="dislike")
button2 = InlineKeyboardButton(text="üëéüëé", callback_data="dislike")
button3 = InlineKeyboardButton(text="üëåüëåüëå", callback_data="its ok")
button4 = InlineKeyboardButton(text="üëçüëçüëçüëç", callback_data="like")
button5 = InlineKeyboardButton(text="‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è", callback_data="excellent")

keyboard_inline = InlineKeyboardMarkup().add(button1).add(button2).add(button3).add(button4).add(button5)
















def registration_client_handlers(disp: Dispatcher):
    dp.register_message_handler(load_photo, content_types=['photo'], state=FSMclient.photo)
    dp.register_message_handler(load_name, state=FSMclient.name)
    dp.register_message_handler(load_description, state=FSMclient.description)
    dp.register_message_handler(load_price, state=FSMclient.price)
    dp.register_message_handler(command_delete, commands=['delete'])




